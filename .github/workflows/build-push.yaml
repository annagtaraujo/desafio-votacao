name: Build and Push Docker Images

on:
  push:
    branches: [dev]

permissions:
  contents: read
  actions: write
  artifacts: write
  packages: write
  id-token: write
  
jobs:
  docker:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract short SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./apps/backend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/backend-votacao:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/backend-votacao:${{ steps.vars.outputs.sha_short }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./apps/frontend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/frontend-votacao:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/frontend-votacao:${{ steps.vars.outputs.sha_short }}

    - name: Export image tags
      run: |
        echo "BACKEND_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/backend-votacao:${{ steps.vars.outputs.sha_short }}" >> image_tags.env
        echo "FRONTEND_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/frontend-votacao:${{ steps.vars.outputs.sha_short }}" >> image_tags.env

    - name: Upload image tag artifact
      uses: actions/upload-artifact@v4
      with:
        name: image-tags
        path: image_tags.env
        if-no-files-found: error
